
<table id="exportTable">
    <tr id="exportTitleRow" style="display: none;">
        <td colspan="2" id="exportTitle" style="text-align: center; font-weight: bold; font-size: 20px;"></td>
    </tr>
    <tr id="exportMessageRow" style="display: none;">
        <td colspan="2" id="exportMessage" style="text-align: center;"></td>
    </tr>
    <tr style="background-color: lightgray;">
        <th>Name</th>
        <th>Age</th>
    </tr>
    <tr>
        <td>John</td>
        <td>30</td>
    </tr>
    <tr>
        <td>Alice</td>
        <td>25</td>
    </tr>
    <tr>
        <td>Bob</td>
        <td>35</td>
    </tr>
</table>
<button id="exportButton">Export to Excel</button>

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/html-to-xlsx@0.6.4/dist/html-to-xlsx.js"></script>


<script>
    document.getElementById('exportButton').addEventListener('click', function () {
        // Get the HTML table element
        var table = document.getElementById('exportTable');

        // Set the title and message
        var title = "Custom Title";
        var message = "This is a custom message.";

        // Set the title and message in the hidden rows
        document.getElementById('exportTitle').textContent = title;
        document.getElementById('exportMessage').textContent = message;
        document.getElementById('exportTitleRow').style.display = ''; // Show the title row
        document.getElementById('exportMessageRow').style.display = ''; // Show the message row

        // Customize the title row with centered text and background color
        table.rows[2].cells[0].style.textAlign = 'center';
        table.rows[2].cells[0].colSpan = 2;
        table.rows[2].style.backgroundColor = 'lightgray';
        table.rows[2].style.fontWeight = 'bold';
        table.rows[2].style.fontSize = '20px';

        // Convert the table to Excel format using html-to-xlsx
        var wb = XLSX.utils.table_to_book(table);

        // Create a Blob object containing the Excel data
        var blob = XLSX.write(wb, { bookType: 'xlsx', type: 'blob' });

        // Create a download link and trigger the download
        var url = window.URL.createObjectURL(blob);
        var a = document.createElement('a');
        a.href = url;
        a.download = 'ExportedData.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);

        // Hide the title and message rows after exporting
        document.getElementById('exportTitleRow').style.display = 'none';
        document.getElementById('exportMessageRow').style.display = 'none';
    });

</script>































<!--@{
}-->
@*<div id="wordContent"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.6.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/docxtemplater/3.25.1/docxtemplater.js"></script>

    <script>

        function renderWordDocument(url, containerId) {
            const container = document.getElementById(containerId);

            fetch(url)
                .then(response => response.arrayBuffer())
                .then(data => {
                    const zip = new JSZip(data);
                    const doc = new window.docxtemplater().loadZip(zip);

                    const content = doc.getFullText();

                    container.innerHTML = content;
                })
                .catch(error => {
                    console.error("Error rendering Word document:", error);
                });
        }

        renderWordDocument('/LMSDocs/Instance545/Affidavit_format.docx', 'wordContent');

    </script>*@







@*<link href="~/css/pagination.css" rel="stylesheet" />


    <div class="progress-container">
        <div class="progress">
            <div class="progress-inner"></div>
            <span class="progress-number">0%</span>
        </div>
    </div>



    <script>
        function setProgress(progress) {
            const progressInner = document.querySelector('.progress-inner');
            const progressNumber = document.querySelector('.progress-number');

            progress = Math.min(100, Math.max(0, progress)); // Ensure progress is between 0 and 100
            progressInner.style.clipPath = `polygon(0 0, ${progress}% 0, ${progress}% 100%, 0 100%)`;
            progressNumber.textContent = `${progress}%`;

            if (progress <= 50) {
                progressInner.style.backgroundColor = 'dodgerblue';
            } else {
                progressInner.style.backgroundColor = 'green';
            }
        }

        setProgress(15); // Set the initial progress value (change as needed)

        // Call setProgress with your desired progress value (e.g., setProgress(50);)


        // Call setProgress with your desired progress value (e.g., setProgress(50);)

        //setProgress(20);

    </script>*@



















@*<!DOCTYPE html>
    <html>
    <head>
        <title>HTML with Plain Text</title>
        <META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
        <style type="text/css">

            html, body {
                overflow-x: hidden;
            }

            #btn {
                padding: 10px;
                border: 0px;
                margin: 50px;
                cursor: pointer;
            }
        </style>
    </head>
    <body>

        <button id="btn">Convert to PDF</button>

        <div id="text">
            <h2>HTML Page with Plain Text to PDF</h2>
            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum</p>
        </div>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.0.272/jspdf.debug.js"></script>
    <script>
        $(document).on('click', '#btn', function () {

            let pdf = new jsPDF();
            let section = $('#text');
            let page = function () {
                pdf.save('pagename.pdf');

            };
            pdf.addHTML(section, page);

        })
    </script>
    </body>
    </html>*@