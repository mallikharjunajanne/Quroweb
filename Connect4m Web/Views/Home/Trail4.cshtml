
@{
    ViewData["Title"] = "Trail4";
    Layout = null;
}

<h1>Trail4</h1>

<style>
    .seek-bar {
        position: relative;
        width: 100%;
        height: 5px;
        background-color: #ccc;
        cursor: pointer;
    }

        .seek-bar .fill {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            background-color: #0000ff;
        }

        .seek-bar .handle {
            position: relative;
            top: -8px;
            width: 10px;
            height: 20px;
            background-color: #000;
            cursor: pointer;
        }

        .seek-bar .thumbnail {
            position: absolute;
            top: -50px;
            left: 0;
            width: 100px;
            height: 80px;
            display: none;
            background-color: #fff;
            border: 1px solid #000;
            margin-top: -42px;
        }
    #thubnailimages {
        position: absolute;
        width: 119px;
        height: 21%;
        top: 45%;
      /*  left: 90%;*/
        z-index: 1;
    }
</style>
<div id="asd" style=""></div>

<video id="myVideo" controls>
    <source src="/Videos/8thClass.mp4"  type="video/mp4">
</video>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    // Get the video element
    var video = document.getElementById('myVideo');

    // Get the seek bar elements
    var seekBar = document.createElement('div');
    seekBar.className = 'seek-bar';

    var fill = document.createElement('div');
    fill.className = 'fill';

    var handle = document.createElement('div');
    handle.className = 'handle';

    var thumbnail = document.createElement('div');
    thumbnail.className = 'thumbnail';

    // Append the seek bar elements to the video element
    seekBar.appendChild(fill);
    seekBar.appendChild(handle);
    seekBar.appendChild(thumbnail);
    video.parentNode.insertBefore(seekBar, video.nextSibling);

    // Update the fill width based on current time
    function updateSeekBar() {
        var percentage = (video.currentTime / video.duration) * 100;
        fill.style.width = percentage + '%';
    }

    // Handle seeking on click
    seekBar.addEventListener('click', function (event) {
        var rect = seekBar.getBoundingClientRect();
        var offsetX = event.clientX - rect.left;
        var percentage = offsetX / rect.width;
        var seekTime = percentage * video.duration;



        video.currentTime = seekTime;





    });

    // Show thumbnail on hover
    seekBar.addEventListener('mousemove', function (event) {
        debugger;
        var rect = seekBar.getBoundingClientRect();
        var offsetX = event.clientX - rect.left;
        var percentage = offsetX / rect.width;
        var videotime = video.currentTime;
        var seekTime = percentage * video.duration;


        const videoElement = document.getElementById("myVideo");
        const sourceElement = videoElement.querySelector("source");
        const videoURL = sourceElement.src;
        const fileName = videoURL.substring(videoURL.lastIndexOf("/") + 1);

        fetch(videoURL)
            .then(response => response.blob())
            .then(blob => {
                const file = new File([blob], fileName, { type: blob.type });
                console.log(file);

                const videoPlayer = document.createElement("video");
                videoPlayer.id = 'thubnailimages';
                videoPlayer.src = URL.createObjectURL(file);

                //position: relative;
              //  width: 77 %;

                videoPlayer.load();
             // videoPlayer.width = 100;
             //  videoPlayer.height = 80;
           //  videoPlayer.style.position = 'relative';
              //  relative.style.width='77%'
                videoPlayer.currentTime = seekTime;

                const container = document.getElementById("asd");

                //container.style.display = 'block';
                if (percentage > 0.9) {
                    percentage = 0.9;
                }
                videoPlayer.style.left = (percentage*100) + '%';
              
                container.innerHTML = '';
                container.append(videoPlayer);



                //   var thumbnailSrc = generateThumbnail(videoPlayer, seekTime);

              //  thumbnail.style.display = 'block';
              //  thumbnail.style.left = offsetX + 'px';
                //   thumbnail.style.backgroundImage = 'url("' + thumbnailSrc + '")';
                // thumbnail.append(videoPlayer);
                // thumbnail.appendChild(videoPlayer);
                // Here, you can use the 'file' object as needed
            })
            .catch(error => {
                console.error("Error retrieving video file:", error);
            });












        //  const selectedFile = fileInput.files[0];



    });

    // Hide thumbnail on mouseout
    //seekBar.addEventListener('mouseout', function (event) {
    //    thumbnail.style.display = 'none';
    //});

    // Generate thumbnail from video at a specific time
    function generateThumbnail(video, seekTime) {

        var canvas = document.createElement('canvas');
        canvas.width = 100;
        canvas.height = 80;
        var ctx = canvas.getContext('2d');

        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

        return canvas.toDataURL();
    }

    // Update the fill width on time update
    video.addEventListener('timeupdate', updateSeekBar);

</script>

