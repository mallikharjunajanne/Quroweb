@model IEnumerable<Connect4m_Web.Models.LMSproperties.ViewLectureDocsMainsub>

@{
    ViewData["Title"] = "ViewLectureDocsSubVideos";
    Layout = null;
}
<style>
    img {
        cursor: pointer;
        width: 35px;
    }

    label {
        text-decoration: underline;
        cursor: pointer;
    }

    #table_displayclass {
        width: 100%;
        margin-left: 5%;
        font-weight: 600;
        margin-bottom: 21px;
    }

        #table_displayclass td:nth-child(1) {
            font-weight: 900;
            text-align: end;
        }

    h5 {
        text-align: center;
        font-weight: 900;
    }

    #ProgramDetails, #VLD_Backtoprogram {
        background-color: #121451;
        color: white;
        text-decoration: none;
        padding: 1px 8px 1px 7px;
        border-radius: 8px;
        filter: drop-shadow(2px 4px 6px black);
    }
    .default-according .card .card-header.bg-primary .btn, .default-according .card .card-header.bg-secondary .btn {
        border-color: rgba(0,0,0,0);
        background-color: #121451;
        border-radius: 50px;
        border: 1px solid black;
        height: 32px;
        font-weight: 700;
        color: white;
        text-align: center;
    }
    .default-according .card .card-header .btn-link {
        font-size: 16px;
        /* padding: 15px 20px; */
        width: 100%;
        text-align: left;
        letter-spacing: 0.7px;
        font-family: Roboto;
        border: 1px solid #efefef;
        border-radius: 0;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }
    .default-according.style-1 button[aria-expanded="true"]:before {
        /*  content: '\002B';*/
        content: '';
        background-image: url('/Images_IMP/details_open.png');
        font-family: IcoFont;
        position: absolute;
        width: 54px;
        height: 20px;
        /* z-index: 9999; */
        background-size: contain;
        background-repeat: no-repeat;
    }
    .default-according.style-1 button[aria-expanded="false"]:before {
        /*    content: "\2212";*/
        content: "";
        background-image: url('/Images_IMP/details_close.png');
      
        font-family: IcoFont;
        position: absolute;
        width: 54px;
        height: 20px;
        /* z-index: 9999; */
        background-size: contain;
        background-repeat: no-repeat;
    }
    .default-according.style-1 button:before {
        right: 20px;
        position: absolute;
        -webkit-transition: 0.4s;
        transition: 0.4s;
    }
    .collapse:not(.show) {
        display: none;
    }
</style>
<link href="~/css/progressbar.css" rel="stylesheet" />
@foreach (var item in Model)
{


    @foreach (var item2 in item.ViewLectureDocs3)
    {

        <div class="col-sm-12">
            <div class="card">

                <div class="card-header pb-0">


                </div>
                <div class="card-body">
                    <div class="default-according style-1" id="accordionoc">
                        <div class="card">
                            <div class="card-header bg-primary">
                                <h5 class="mb-0">
                                    <button id="collapse" class="btn btn-link text-white" data-bs-toggle="collapse" data-bs-target="#collapseicon" aria-expanded="true" aria-controls="collapse11">@item2.SubjectToolName.ToUpper()</button>
                                </h5>
                            </div>
                            <div class="collapse show" id="collapseicon1" aria-labelledby="collapseicon" data-bs-parent="#accordionoc">

                                <div class="row padding-search">
                                    <div class="row">
                                        <div style="margin-top: 1%; margin-bottom: 1%;">
                                            <table style=" width:100%;">
                                                @foreach (var item1 in item.uploadlecturedocs)
                                                {

                                                    int viewvalue = 0;
                                                    int viewpoint = 0;
                                                    int totalpois = 0;
                                                    double percent = 0;
                                                    if (item1.Displayname != "undefined")
                                                    {

                                                        if (@item2.InstanceSubjectToolId == item1.SubjectToolIdSub)
                                                        {

                                                <tr>
                                                    @{string img = item1.Ext1.Replace("..", "~");
                                                    }
                                                    @{
                                                        string img2 = item1.Extdocs.Replace("..", "~");
                                                    }
                                                    <td width="7%"> <img src="@Url.Content(@img)" /></td>
                                                    <td width="73%">  <label id="VLD_VideoView">@item1.Displayname<input type="text" value="@item1.SubjectVideoId" hidden /></label></td>
                                                    <td width="8%"> <img src="@Url.Content(@img2)" /></td>
                                                    @foreach (var item3 in ViewBag.GetallViewvideopoints)
                                                    {
                                                        if (item3.SubjectVideoId == item1.SubjectVideoId)
                                                        {
                                                            if (img2.EndsWith("Mp4-Icon.png"))
                                                            {


                                                                try
                                                                {

                                                                    viewpoint = item3.Viewspoints;
                                                                    totalpois = item3.TotalPoins;
                                                                    percent = totalpois > 0 ? ((double)viewpoint / totalpois) * 100 : 0;

                                                                    //  percent = (viewpoint / totalpois) * 100;
                                                                    viewvalue++;
                                                                }
                                                                catch
                                                                {
                                                                    percent = 0;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                try
                                                                {

                                                                    viewpoint = item3.Viewspoints;
                                                                    totalpois = item3.TotalPoins;
                                                                    percent = totalpois > 0 ? ((double)viewpoint / totalpois) * 100 : 0;

                                                                    //  percent = (viewpoint / totalpois) * 100;
                                                                    viewvalue++;
                                                                }
                                                                catch
                                                                {
                                                                    percent = 0;
                                                                }
                                                            }
                                                        }
                                                    }

                                                    <td class="progressbarvaluetd">
                                                        <div class="progress-bar" style="background: radial-gradient(closest-side, white 79%, transparent 80% 100%), conic-gradient(#500ef6 @Math.Round(percent)%,#bfbed5 0);">
                                                            @Convert.ToInt32(percent)%
                                                        </div>





                                                    </td>

                                                </tr>

                                                                        }

                                                                    }
                                                                }
                                            </table>


                                        </div>

                                    </div>


                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
}

<script src="~/lib/jquery/dist/jquery.js"></script>


<script src="~/js/ViewLecturedocs.js"></script>
