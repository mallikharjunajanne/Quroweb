@model Connect4m_Web.Models.Attendenceproperites.FeeTerms
@{
    //ViewData["Title"] = "ManageFeeTerms";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!DOCTYPE html>
<html>
<head>
    @*<style>
            span.validation {
                display: block;
                color: red;
            }
            .InputTxt {
                width: 193px;
                font-size: 12px;
                color: black;
                height: 27px;
                outline: none;
                border-radius: 4px;
            }
        </style>
        <link href="~/css/maps/Manage_fee_ConcedingStyle.css" rel="stylesheet" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />*@
</head>
<body>

    <div class="flex-grow-1 container-p-y container-fluid">
        <span id="Errormessage" class="text-danger"></span>
        <h4 class="py-3 mb-4"><span class="text-muted fw-light">FeeSection /</span>MANAGE FEE TERMS </h4>

        <div class="row justify-content">
            <div class="col-sm-12 text-end">
                <button type="button" class="btn rounded-pill btn-info waves-effect waves-light " id="addnewbtn" onclick="Addnewtermfun(event);">Create Fee Term</button>
            </div>
        </div>
        <div class="row mb-2" id="FeeTypesDiscountTbl_Divid">
            <div class="col-md-12 col-lg-12 mb-3">
                <div class="card mb-4">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        <h5 class="mb-0">
                            SEARCH FEE TERMS
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <form class="form" id="Searchfeetermformid">
                                    @*SEARCH_FEE_TYPES_FORM*@
                                    <div class="row mb-3">
                                        <label class="control-label col-sm-4 col-form-label text-end space">Academic Year </label>
                                        <div class="col-sm-4">
                                            <select asp-for="AcademicYearId" class="select2 form-select select2-hidden-accessible" id="searchddlacadamicyearid">
                                            </select>
                                        </div>
                                        <!--<div class="col-sm-4">-->
                                        @*<div class="position-relative">
                                                @Html.DropDownListFor(model => model.AcademicYearId, new SelectList(ViewBag.AcadamicYearDD, "Value", "Text"), "--Select--", new { id = "CT_Classification_Id", @class = "select2 form-select select2-hidden-accessible" })
                                            </div>*@
                                        <!--</div>-->
                                    </div>
                                    <div class="row mb-3">
                                        <label class="control-label col-sm-4 col-form-label text-end  space">Fee Term </label>
                                        <div class="col-sm-4">
                                            <input type="text" asp-for="FeeType" id="FeeTermTxt_Id" class="form-control">
                                        </div>
                                    </div>

                                    @*<div id="Ct_Lg_DivId" class="row" style=" margin-top: 10px;">*@

                                    @*<div style=" display: flex; grid-gap: 16px; margin-left: 15%; margin-top: 10px;">

                                            <a href="/FeeSection/ManageFeeTypes" class="btn btn-pill btn-outline-primary-2x PreviousPageBtn">Previous Page</a>
                                            <input type="reset" value="Clear" id="Clear_Btn" class="btn btn-pill btn-outline-danger-2x" style="border-radius: 8px; ">
                                            <input type="submit" value="Search" class="btn btn-pill btn-outline-success-2x" style="border-radius: 8px;" onclick="Search_FeeTerms(event);">
                                            <a href="/FeeSection/Manage_Bank_Accounts" class="btn btn-outline-info NextPageBtn">Next Page</a>

                                        </div>*@
                                    <div class="row justify-content text-center">
                                        <div class="col-sm-12">
                                            <button type="button" class="btn btn-info waves-effect waves-light" onclick="previouspages('ManageFeeTypes',null)">Previous Page</button>
                                            <button type="button" class="btn btn-warning waves-effect waves-light" onclick="CommonClearFunction('Searchfeetermformid')" id="BtnClear">Clear</button>
                                            <button type="button" class="btn btn-success waves-effect waves-light" id="searchbtn">Search</button>
                                            <button type="button" class="btn btn-primary waves-effect waves-light" onclick="nextpages('ManageBankAccounts',null)">Next Page</button>
                                        </div>
                                    </div>
                                    @*</div>*@
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-md-12 col-lg-12 mb-3">
                    <div class="card mb-4">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h5 class="mb-0">
                                <span>
                                    YOUR SEARCH RESULTED:<span id="TableCount" class="TableCount_Span"></span> RECORDS.
                                </span>
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="card-datatable text-nowrap">
                                <div class="table-responsive">
                                    <div class="table-responsive text-nowrap" id="FeeTerms_Table">
                                        <table class="table table-bordered">
                                            <thead class="table-dark">
                                                <tr>
                                                    <th>Fee Term</th>
                                                    <th>Fee Type</th>
                                                    <th>Description</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>

                                        <div id="FeeTerm_pagination" class="col-12 text-center"></div>
                                       @*Table Html And Table Data Bind Code End*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        @*Create New Fee type Code Start*@

        <div id="CreateFeeDiscountType_Divid">
            <div style="color: red; font-size: 12px;">
                <div id="validation2" style="color: red;"></div>
                <div id="validationMessage" style="color: red;"></div>
                <p id="MessageID"></p>
            </div>

            <div class="row mb-2">
                <div class="col-md-12 col-lg-12 mb-3">
                    <div class="card mb-4">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h5 class="mb-0">
                                SAVE FEE TERM
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <form class="form" id="Createnewtermform">@*Create_NewFeeType*@
                                        <div class="row mb-3">
                                            <label asp-for="AcademicYearId" class="control-label col-sm-4 col-form-label text-end required space">Academic Year </label>
                                            <div class="col-sm-4">
                                                <div class="position-relative">
                                                    <select asp-for="AcademicYearId" class="select2 form-select select2-hidden-accessible" id="Ddlacadamicyearid">
                                                    </select>
                                                    <span asp-validation-for="AcademicYearId" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label asp-for="FeeTermId" class="control-label col-sm-4 col-form-label text-end required space">Fee Term </label>
                                            <div class="col-sm-4">
                                                <input type="text" asp-for="FeeTermId" id="FeeTermName" class="form-control">
                                                <span asp-validation-for="FeeTermId" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label asp-for="FeeType" class="control-label col-sm-4 col-form-label text-end required space">Fee Types</label>
                                            <div class="col-sm-4">
                                                <div class="position-relative">
                                                    <select multiple asp-for="FeeType" class="select2 form-select select2-hidden-accessible" id="Ddlfeetype">
                                                    </select>
                                                    @*@Html.ListBox("FeeTypeId", ViewBag.Feetypesdd as SelectList, new { @class = "select2 form-select select2-hidden-accessible", @id = "FType_ID" })*@
                                                    <span asp-validation-for="FeeType" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label asp-for="Description" class="control-label col-sm-4 col-form-label text-end  space">Description </label>
                                            <div class="col-sm-4">
                                                <textarea asp-for="Description" class="form-control" id="FeeTermdescription"></textarea>
                                                @*<textarea class="DescriptionTA form-control" id="description"></textarea>*@
                                            </div>
                                        </div>
                                        <div class="row justify-content text-center">
                                            <div class="col-sm-12">
                                                <button type="button" class="btn btn-info waves-effect waves-light" onclick="previouspages('ManageFeeTypes',null)">Previous Page</button>
                                                <button type="reset" class="btn btn-warning waves-effect waves-light" onclick="CommonClearFunction('Createnewtermform')" id="BtnClear">Clear</button>
                                                <button type="button" class="btn btn-dark waves-effect waves-light" id="backToSearchBtn" onclick="backToSearch(event);">Back To Search</button>
                                                <button type="submit" class="btn btn-success waves-effect waves-light" id="Create_New_FeeTypeBtn">Save</button> @*onclick="saveFeeTerms(event);"*@
                                                <button type="button" class="btn btn-primary waves-effect waves-light" onclick="nextpages('ManageBankAccounts',null)">Next Page</button>
                                            </div>
                                        </div>


                                        @*<div style=" display: flex; grid-gap: 16px; margin-left: 15%; margin-top: 10px;">
            <a href="/FeeSection/ManageFeeTypes" class="btn btn-pill btn-outline-primary-2x PreviousPageBtn">Previous Page</a>
            <input type="reset" value="Clear" id="Clear_Btns" class="btn btn-pill btn-outline-danger-2x" style="border-radius: 8px; ">
            <input type="submit" id="backToSearchBtn" value="Back to Search" class="btn btn-pill btn-outline-info-2x" style="border-radius: 8px;" onclick="backToSearch(event);">
            <input type="submit" id="Create_New_FeeTypeBtn" value="Save" class="btn btn-pill btn-outline-success-2x" style="border-radius: 8px;" onclick="saveFeeTerms(event);">
            <a href="/FeeSection/Manage_Bank_Accounts" class="btn btn-outline-info NextPageBtn">Next Page</a>
        </div>*@


                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        @*Create New Fee type Code End*@






        <div id="UpdateEditView_DivId">
            <div style="color: red; font-size: 12px;">
                <div id="Updatevalidation2" style="color: red;"></div>
                <div id="UpdatevalidationMessage" style="color: red;"></div>
                <p id="UpdateMessageID"></p>
            </div>



            <div class="row mb-2">
                <div class="col-md-12 col-lg-12 mb-3">
                    <div class="card mb-4">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h5 class="mb-0">
                                UPDATE FEE TERM
                            </h5>
                        </div>

                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <form class="form" id="Create_NewFeeType">
                                        <div class="row mb-3">
                                            <label class="control-label col-sm-4 col-form-label text-end required space">Academic Year </label>
                                            <div class="col-sm-4">
                                                <div class="position-relative">
                                                    <select asp-for="AcademicYearId" class="select2 form-select select2-hidden-accessible" id="AcademicYearEdit_Id">
                                                    </select>
                                                    @*@Html.DropDownListFor(model => model.AcademicYearId, new SelectList(ViewBag.AcadamicYearDD, "Value", "Text"), "--Select--", new { id = "AcademicYearEdit_Id", @class = "select2 form-select select2-hidden-accessible" })*@
                                                    <span asp-validation-for="AcademicYearId"class="text-danger"></span>
                                                    <input type="hidden" id="FeeTermIdTxt_Id" />
                                                    <input type="hidden" id="InstanceIdTxt_Id" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label asp-for="FeeType" class="control-label col-sm-4 col-form-label text-end required space">Fee Term </label>
                                            <div class="col-sm-4">
                                                <input type="text" id="FeeTermNameTxt_Id" class="form-control">
                                                <span asp-validation-for="FeeType"></span>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label class="control-label col-sm-4 col-form-label text-end required space">Fee Types  </label>
                                            <div class="col-sm-4">
                                                <div class="position-relative">
                                                    <select multiple asp-for="FeeType" class="select2 form-select select2-hidden-accessible" id="FTermEdit_ID">
                                                    </select>
                                                    @*@Html.ListBox("FeeTypeId", ViewBag.Feetypesdd as SelectList, new { @class = "select2 form-select select2-hidden-accessible", @id = "FTermEdit_ID" })*@
                                                    <span asp-validation-for="FeeType" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label asp-for="Description" class="control-label col-sm-4 col-form-label text-end  space">Description </label>
                                            <div class="col-sm-4">
                                                <textarea class="form-control" id="FeeTermdescriptionTxt_Id"></textarea>
                                                @*<textarea class="DescriptionTA form-control" id="description"></textarea>*@
                                            </div>
                                        </div>
                                        @*<div class="d-flex justify-content-center align-items-center">
                                            <div class="form-group row g-3">
                                                <div class="row" style=" margin-top: 10px;">
                                                    <div style="display: flex; grid-gap: 16px;">*@


                                        @*<label class="col-sm-5 col-form-label" style="color:black;"><font style="color: red; font-size: 13px;">*</font>Academic Year :</label>
                                                <div class="col-sm-7">
                                                    @Html.DropDownListFor(model => model.AcademicYearId, new SelectList(ViewBag.AcadamicYearDD, "Value", "Text"), "--Select--", new { id = "AcademicYearEdit_Id", @class = "Dropdown" })
                                                </div>
                                            </div>*@
                                        @*<div style="display: flex; grid-gap: 16px;">
                                                <label class="col-sm-5 col-form-label" style="color:black;"><font style="color: red; font-size: 13px;">*</font>Fee Term :</label>
                                                <div class="col-sm-7">
                                                    <input type="text" id="FeeTermNameTxt_Id" style=" width: 45%;" />
                                                </div>
                                            </div>*@
                                        @*<div style="display: flex; grid-gap: 16px;">
                                                <label class="col-sm-5 col-form-label" style="color:black;"><font style="color: red; font-size: 13px;">*</font>Fee Types :</label>
                                                @Html.ListBox("FeeTypeId", ViewBag.Feetypesdd as SelectList, new { @class = "DD_Lb", @id = "FTermEdit_ID" })
                                            </div>*@


                                        @*<div style="display: flex; grid-gap: 1px;">
                                                <label class="col-sm-5 col-form-label" style="color:black;"><font style="color: red; font-size: 13px;"></font>Description :</label>
                                                <textarea class="DescriptionTA" id="FeeTermdescriptionTxt_Id"></textarea>
                                            </div>*@

                                        <div class="row justify-content text-center">
                                            <div class="col-sm-12">
                                                <button type="button" class="btn btn-info waves-effect waves-light" onclick="previouspages('ManageFeeTypes',null)">Previous Page</button>
                                                <button type="button" class="btn btn-warning waves-effect waves-light" @*onclick="Update_View_Delete(event);"*@ id="BtnDelete">Delete</button>
                                                <button type="button" class="btn btn-dark waves-effect waves-light" id="EditTobackSearchBtn" onclick="EditTobackSearch(event);">Back To Search</button>
                                                <button type="submit" class="btn btn-success waves-effect waves-light" id="Update_FeeTermBtn" onclick="UpdateFeeTerm(event);">Update</button>
                                                <button type="submit" class="btn btn-primary waves-effect waves-light"onclick="nextpages('ManageBankAccounts',null)">Next Page</button>
                                            </div>
                                        </div>
                                        @*<div style=" display: flex; grid-gap: 16px; margin-left: 15%; margin-top: 10px;">
                                                <a href="/FeeSection/ManageFeeTypes" class="btn btn-pill btn-outline-primary-2x PreviousPageBtn">Previous Page</a>
                                                <input type="submit" value="Delete" class="btn btn-pill btn-outline-danger-2x" style="border-radius: 8px; " onclick="Update_View_Delete(event);">
                                                <input type="submit" id="EditTobackSearchBtn" value="Back to Search" class="btn btn-pill btn-outline-info-2x" style="border-radius: 8px;" onclick="EditTobackSearch(event);">
                                                <input type="submit" id="Update_FeeTermBtn" value="Update" class="btn btn-pill btn-outline-success-2x" style="border-radius: 8px;" onclick="UpdateFeeTerm(event);">
                                                <a href="/FeeSection/Manage_Bank_Accounts" class="btn btn-outline-info NextPageBtn">Next Page</a>
                                            </div>*@


                                    </form>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



</body>
</html>




<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script src="~/js/Manage_fee_terms.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    @*// Get the container element
    var container = document.getElementById('FeesectionTableContainer');
    /*debugger;*/
    var table = container.parentElement; // Get the parent table element

    // Get the table rows within the container
    var rows = Array.from(container.getElementsByTagName('tr'));
    var numRows = rows.length;
    var rowsPerPage = 10;
    var totalPages = Math.ceil(numRows / rowsPerPage);

    // Show the specified page
    function showPage(page) {
        var startIndex = (page - 1) * rowsPerPage;
        var endIndex = Math.min(startIndex + rowsPerPage, numRows);

        // Hide all rows except the first row (table headings)
        for (var i = 1; i < rows.length; i++) {
            rows[i].style.display = 'none';
        }

        // Show rows for the specified page
        for (var i = startIndex; i < endIndex; i++) {
            rows[i].style.display = 'table-row';
        }
    }

    // Create pagination links
    var pagination = document.getElementById('pagination');

    var prevLink = document.createElement('a');
    prevLink.href = '#';
    prevLink.textContent = 'Previous';
    prevLink.classList.add('pagination-link');
    prevLink.classList.add('previous-link');
    pagination.appendChild(prevLink);

    for (var i = 1; i <= totalPages; i++) {
        var link = document.createElement('a');
        link.href = '#';
        link.textContent = i;
        link.classList.add('pagination-link');
        pagination.appendChild(link);
    }

    var lastLink = document.createElement('a');
    lastLink.href = '#';
    lastLink.textContent = 'Last';
    lastLink.classList.add('pagination-link');
    lastLink.classList.add('Last-link');
    pagination.appendChild(lastLink);

    // Show the first page by default
    showPage(1);

    // Handle pagination link click event
    pagination.addEventListener('click', function (e) {
        e.preventDefault();

        if (e.target.tagName === 'A') {
            var page = parseInt(e.target.textContent);

            if (e.target.textContent === 'Previous') {
                page = 1;
            } else if (e.target.textContent === 'Last') {
                page = totalPages;
            }

            showPage(page);
        }
    });
</script>



<script>
    function validateForm() {
       /* debugger;*/
        var AcademicYear_Id = $("#AcademicYear_Id").val();
        var FeeTermName = $("#FeeTermName").val();
        var FType_ID = $("#FType_ID").val();
        var FeeTermdescription = $("#FeeTermdescription").val();



        var validationMessage = "";
        var hasError = false;

        if (AcademicYear_Id === "") {
            validationMessage += "Academic Year <br>";
            hasError = true;
        }
        if (FeeTermName === "") {
            validationMessage += "Fee Term <br>";
            hasError = true;
        }
        if (FType_ID === "") {
            validationMessage += "Fee Types <br>";
            hasError = true;
        }


        if (hasError) {
            $('#validation2').html("Following fields have invalid data :");
            $("#validationMessage").html(validationMessage);
            return false; // Return false to prevent form submission
        } else {
            $("#validationMessage").html("");
            return true; // Return true to proceed with form submission
        }
    }

    $(document).ready(function () {
        /*debugger;*/
        $("#Create_NewFeeType").submit(function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Perform field validation
            if (validateForm()) {
                // Serialize form data

                var formDataArray = $(this).serializeArray();

                // Add additional values to the formDataArray

                /*debugger;*/
                var AcademicYear_Id = $("#AcademicYear_Id").val();
                var FeeTermName = $("#FeeTermName").val();
                var FeeTypeIds = $("#FType_ID").val();

                var FeeTermdescription = $("#FeeTermdescription").val();


                formDataArray.push({ name: 'AcademicYearId', value: AcademicYear_Id });
                formDataArray.push({ name: 'TermName', value: FeeTermName });
                formDataArray.push({ name: 'Description', value: FeeTermdescription });
                formDataArray.push({ name: 'FeeTypeIds', value: FeeTypeIds });

                // Convert the formDataArray back to serialized form data
                var formData = $.param(formDataArray);


                // Perform AJAX POST request
                $.ajax({
                    url: '/FeeSection/ManageFeeTerms', // Replace with the actual URL and controller name
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        //debugger;
                        //alert(response);
                        if (response == "1") {
                            // Handle the case when the record is inserted successfully
                            $("#MessageID").text("Record inserted successfully!");
                            // Perform any additional actions or page redirection if needed
                        }
                        else if (response == "2") {
                            $("#MessageID").text("Record inserted successfully!");
                        }
                        else if (response == "-1")
                        {
                            $("#MessageID").text("Term Name with Name " + FeeTermName + " already exists.");

                        }
                        else if (response == response) {

                            $('#MessageID').text('Record inserted successfully.');
                        }
                        else {
                            // Handle the case when the record insertion fails
                            $("#MessageID").text("Failed to insert the record. Please try again.");
                            // Perform any additional error handling or display error messages
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle errors
                    }
                });
            }
        });
    });*@
    //$(document).ready(function () {
    //    /*debugger;*/
    //    $("#Create_NewFeeType").submit(function (e) {
    //        e.preventDefault(); // Prevent the default form submission

    //        // Perform field validation
    //        if (validateForm()) {
    //            // Serialize form data

    //            var formDataArray = $(this).serializeArray();

    //            // Add additional values to the formDataArray

    //            /*debugger;*/
    //            var AcademicYear_Id = $("#AcademicYear_Id").val();
    //            var FeeTermName = $("#FeeTermName").val();
    //            var FeeTypeIds = $("#FType_ID").val();

    //            var FeeTermdescription = $("#FeeTermdescription").val();


    //            formDataArray.push({ name: 'AcademicYearId', value: AcademicYear_Id });
    //            formDataArray.push({ name: 'TermName', value: FeeTermName });
    //            formDataArray.push({ name: 'Description', value: FeeTermdescription });
    //            formDataArray.push({ name: 'FeeTypeIds', value: FeeTypeIds });

    //            // Convert the formDataArray back to serialized form data
    //            var formData = $.param(formDataArray);


    //            // Perform AJAX POST request
    //            $.ajax({
    //                url: '/FeeSection/ManageFeeTerms', // Replace with the actual URL and controller name
    //                type: 'POST',
    //                data: formData,
    //                success: function (response) {
    //                    //debugger;
    //                    //alert(response);
    //                    if (response == "1") {
    //                        // Handle the case when the record is inserted successfully
    //                        $("#MessageID").text("Record inserted successfully!");
    //                        // Perform any additional actions or page redirection if needed
    //                    }
    //                    else if (response == "2") {
    //                        $("#MessageID").text("Record inserted successfully!");
    //                    }
    //                    else if (response == "-1") {
    //                        $("#MessageID").text("Term Name with Name " + FeeTermName + " already exists.");

    //                    }
    //                    else if (response == response) {

    //                        $('#MessageID').text('Record inserted successfully.');
    //                    }
    //                    else {
    //                        // Handle the case when the record insertion fails
    //                        $("#MessageID").text("Failed to insert the record. Please try again.");
    //                        // Perform any additional error handling or display error messages
    //                    }
    //                },
    //                error: function (xhr, status, error) {
    //                    // Handle errors
    //                }
    //            });
    //        }
    //    });
    //});

</script>



<script>



    //$(document).ready(function () {


    //    $("#CreateFeeDiscountType_Divid").hide();
    //    $("#FeeTypesDiscountTbl_Divid").show();
    //    $("#UpdateEditView_DivId").hide();


    //    Feesection_TbLData_Callingfunction();

    //});




    function Search_FeeTerms(event) {

        debugger;
        event.preventDefault();



        // Get the search input value

        var TermName = $('#FeeTermTxt_Id').val();
        var AcademicYearId = $('#CT_Classification_Id').val();


        // Call the Feesection_TbLData_Callingfunction and pass the search value as a parameter
        Feesection_TbLData_Callingfunction(TermName, AcademicYearId);
    }

    /*--------------------------  TbLData FUNCTION START-------------------------- */
    function Feesection_TbLData_Callingfunction(TermName, AcademicYearId) {

        debugger;

        $.ajax({
            url: '/FeeSection/Fee_Terms_GetTable',
            method: 'GET',
            data: {
                TermName: TermName,
                AcademicYearId: AcademicYearId
            },
            success: function (response) {


                debugger;

                var CountTabledata = response.length;

                $('#TableCount').text(CountTabledata);

                console.log(response); // Log the response object in the browser's console



                var table = $('#FeeTerms_Table');
                var tbody = table.find('tbody');


                // Clear the existing table body
                tbody.empty();

                // Iterate over the data and create table rows
                $.each(response, function (index, FeeTermstbls) {
                    var row = $('<tr></tr>');



                    // Create table cells and populate with data

                    var cell1 = $('<td class="editable-cell"></td>').css('cursor', 'pointer');
                    var text = $('<span></span>').text(FeeTermstbls.termName).css({
                        'color': 'black',
                        'font-weight': '600',
                        'text-decoration': 'underline'
                    }).attr('onclick', 'Feeterm_Edit(' + FeeTermstbls.feeTermId + ')');
                    cell1.append(text);


                    var cell2 = $('<td></td>').text(FeeTermstbls.feeType);
                    var cell3 = $('<td></td>').text(FeeTermstbls.description);
                    var cell4 = $('<td></td>').css('text-align', 'center');
                    var deleteIcon = $('<i></i>').addClass('fas fa-trash-alt'); // Assuming you're using Font Awesome icons
                    deleteIcon.data('row', row);
                    cell4.append(deleteIcon);


                    var cell5 = $('<td hidden></td>').text(FeeTermstbls.instanceId);
                    var cell6 = $('<td hidden></td>').text(FeeTermstbls.academicYearId);
                    var cell7 = $('<td hidden></td>').text(FeeTermstbls.feeTypeId);




                    // Append the cells to the row
                    row.append(cell1);
                    row.append(cell2);
                    row.append(cell3);
                    row.append(cell4);
                    row.append(cell5);
                    row.append(cell6);
                    row.append(cell7);

                    // Append the row to the table body
                    tbody.append(row);
                });




                /*---------------------------------------------- PAGINATION CODE START ----------------------------------------------*/

                var rowsPerPage = 10; // Number of rows to display per page
                var numPages = Math.ceil(response.length / rowsPerPage);
                var currentPage = 1; // Default current page

                var pagination = $('#FeeTerm_pagination');
                pagination.empty();

                // Create pagination links
                var previousLink = $('<a class="FeeTerm_pagination" style="margin: 0 2px;" href="#">Previous</a>');
                pagination.append(previousLink);

                var startIndex = 1; // Start index for pagination links
                var endIndex = Math.min(numPages, 10); // End index for pagination links

                for (var i = startIndex; i <= endIndex; i++) {
                    var link = $('<a class="FeeTerm_pagination" style="margin: 0 2px;" href="#">' + i + '</a>');
                    pagination.append(link);
                }

                var nextLink = $('<a class="FeeTerm_pagination" style="margin: 0 2px;" href="#">Next</a>');
                pagination.append(nextLink);

                // Show the first page by default
                showPage(currentPage);

                // Adjust pagination alignment
                pagination.css('text-align', 'center');

                // Handle pagination link click event
                pagination.on('click', '.FeeTerm_pagination', function (e) {
                    e.preventDefault();
                    var linkText = $(this).text();
                    if (linkText === "Previous") {
                        currentPage = Math.max(currentPage - 1, 1);
                    } else if (linkText === "Next") {
                        currentPage = Math.min(currentPage + 1, numPages);
                    } else {
                        currentPage = parseInt(linkText);
                    }
                    showPage(currentPage);
                });

                // Function to display the specified page
                function showPage(page) {
                    var start = (page - 1) * rowsPerPage;
                    var end = start + rowsPerPage;

                    tbody.find('tr').hide(); // Hide all rows
                    tbody.find('tr').slice(start, end).show(); // Show rows for the specified page

                    // Update pagination links
                    var newStartIndex = Math.max(1, page - 4);
                    var newEndIndex = Math.min(newStartIndex + 9, numPages);

                    if (newEndIndex === numPages) {
                        newStartIndex = Math.max(1, numPages - 9);
                    }

                    pagination.empty();
                    pagination.append(previousLink);

                    for (var i = newStartIndex; i <= newEndIndex; i++) {
                        var link = $('<a class="FeeTerm_pagination" style="margin: 0 2px;" href="#">' + i + '</a>');
                        pagination.append(link);
                    }

                    pagination.append(nextLink);

                    // Update active class on current page link
                    $('.FeeTerm_pagination').removeClass('active');
                    $('.FeeTerm_pagination').eq(page - newStartIndex + 1).addClass('active').css('cursor', 'unset');;
                }



                /*-------------------------------------- PAGINATION CODE END ---------------------------------------------*/

            },
            error: function () {
                console.log('Error retrieving data.');
            }
        });
    }
    /*--------------------------  TbLData FUNCTION End-------------------------- */


    /*--------------------------  Delete FUNCTION START-------------------------- */
    //$('#FeeTerms_Table').on('click', '.fa-trash-alt', function () {
    //    var row = $(this).data('row');

    //    var InstanceId = $(this).closest('tr').find('td:nth-child(5)').text();
    //    var FeeTermId = $(this).closest('tr').find('td:nth-child(6)').text();
    //    var FeeTypeId = $(this).closest('tr').find('td:nth-child(7)').text();
    //    var FeeTerm = $(this).closest('tr').find('td:nth-child(1)').text();
    //    var FeeTypeName = $(this).closest('tr').find('td:nth-child(2)').text();




    //    if (confirm('Are you sure you want to delete the FeeTerm Name?\nClick ' + 'OK' + ' to delete or ' + 'Cancel' + 'to stop deleting.')) {
    //        deleteFeeType(InstanceId, FeeTermId, FeeTypeId, FeeTypeName, FeeTerm, row);
    //    }
    //});

    //function deleteFeeType(InstanceId, FeeTermId, FeeTypeId, FeeTypeName, FeeTerm, row) {

    //    debugger;

    //    $.ajax({
    //        url: '/FeeSection/Delete_FeeTerm',
    //        method: 'POST',
    //        data: {
    //            InstanceId: InstanceId,
    //            FeeTermId: FeeTermId,
    //            FeeTypeId: FeeTypeId
    //        },
    //        success: function (response) {
    //            debugger;
    //            if (response == '1') {
    //                debugger;
    //                $('#ErrorMessage_SpanId').text('Record deleted successfully.');

    //                row.remove();

    //                Feesection_TbLData_Callingfunction();

    //                window.scrollTo(0, 0);
    //            } else if (response == '2') {
    //                $('#ErrorMessage_SpanId').text('FeeType' + '"' + FeeTerm + '"' + 'is Deleted For the FeeTerm ' + '"' + FeeTypeName + '"');
    //                row.find('td:eq(4)').empty();
    //            } else if (response == '0') {
    //                $('#ErrorMessage_SpanId').text('Record not deleted.');
    //            }

    //            else {
    //                alert('NUll');
    //            }
    //        },
    //        error: function () {
    //            console.log('Error deleting Fee Type.');
    //        }
    //    });
    //}
    /*--------------------------  Delete FUNCTION END -------------------------- */



    /*----------Create  New Fee Type table Hide and fileds are showing code start------------------------*/
    function Create_NewFeeSection(event) {
        /* debugger;*/
        event.preventDefault();


        /*----------- Messages Ids data Clear------------------*/
        $("#ErrorMessage_SpanId").html('');
        $("#MessageID").html('');
        $("#validationMessage").html('');
        $("#validation2").html('');
        $('#ErrorMessage_SpanId').text('');
        /*----------- Messages Ids data Clear------------------*/

        // Show/hide the div elements based on the link clicked
        $("#CreateFeeDiscountType_Divid").show();
        $("#FeeTypesDiscountTbl_Divid").hide();
        $("#UpdateEditView_DivId").hide();



    }
    /*----------Create  New Fee Type table Hide and fileds are showing code End------------------------*/

    // Function to show/hide the div elements
    function backToSearch(event) {
        event.preventDefault();

        Feesection_TbLData_Callingfunction();

        $("#ErrorMessage_SpanId").html('');
        $("#MessageID").html('');


        $("#UpdateMessageID").html('');
        $("#UpdatevalidationMessage").html('');

        $("#CreateFeeDiscountType_Divid").hide();


        $("#AcademicYear_Id").val('');
        $("#FeeTermName").val('');
        $("#FType_ID").val('');

        $("#FeeTermdescription").val('');


        /*$("#CreateFeeDiscountType_Divid").empty();*/
        $("#FeeTypesDiscountTbl_Divid").show();
        $("#UpdateEditView_DivId").hide();

    }



    $('#Clear_Btn').click(function () {

        location.reload();

    });
    $('#Clear_Btns').click(function () {

        $("#AcademicYear_Id").val('');
        $("#FeeTermName").val('');
        $("#FType_ID").val('');
        $("#FeeTermdescription").val('');
        $('#validationMessage').text('');
        $('#validation2').text('');
        $('#MessageID').text('');
        $('#ErrorMessage_SpanId').text('');
    });

    /*--------------------------  VALIDATION FUNCTION START-------------------------- */
    function validateForm() {
        debugger;


        var AcademicYear_Id = $("#AcademicYear_Id").val();
        var FeeTermName = $("#FeeTermName").val();
        var FType_ID = $("#FType_ID").val();
        var FeeTermdescription = $("#FeeTermdescription").val();



        var validationMessage = "";
        var hasError = false;

        if (AcademicYear_Id === "") {
            validationMessage += "Academic Year <br>";
            hasError = true;
        }
        if (FeeTermName === "") {
            validationMessage += "Fee Term <br>";
            hasError = true;
        }
        if (FType_ID.length === 0 || (FType_ID.length === 1 && FType_ID[0] === "")) {
            validationMessage += "Fee Type.<br>";
            hasError = true;
        }


        if (hasError) {
            $('#validation2').html("Following fields have invalid data :");
            $("#validationMessage").html(validationMessage);
            return false; // Return false to prevent form submission
        } else {
            $("#validationMessage").html("");
            return true; // Return true to proceed with form submission
        }
    }
    /*--------------------------  VALIDATION FUNCTION END -------------------------- */






    /*--------------------------  Create New Fee Type Functions Start -------------------------- */
    function saveFeeTerms(event) {
        event.preventDefault();

        /* debugger;*/
        if (validateForm()) {


            $('#validationMessage').text('');
            $('#validation2').text('');
            $('#MessageID').text('');
            $('#ErrorMessage_SpanId').text('');

            debugger;
            var formDataArray = $(this).serializeArray();


            var AcademicYear_Id = $("#AcademicYear_Id").val();
            var FeeTermName = $("#FeeTermName").val();
            var FeeTypeIds = $("#FType_ID").val();

            var FeeTermdescription = $("#FeeTermdescription").val();


            formDataArray.push({ name: 'AcademicYearId', value: AcademicYear_Id });
            formDataArray.push({ name: 'TermName', value: FeeTermName });
            formDataArray.push({ name: 'Description', value: FeeTermdescription });
            formDataArray.push({ name: 'FeeTypeIds', value: FeeTypeIds });

            // Convert the formDataArray back to serialized form data
            var formData = $.param(formDataArray);


            // Perform AJAX POST request
            $.ajax({
                url: '/FeeSection/ManageFeeTerms', // Replace with the actual URL and controller name
                type: 'POST',
                data: formData,
                success: function (response) {
                    debugger;
                    //alert(response);
                    if (response == "1") {
                        // Handle the case when the record is inserted successfully
                        $("#MessageID").text("Record inserted successfully!");
                        // Perform any additional actions or page redirection if needed
                    }
                    else if (response == "2") {
                        $("#MessageID").text("Record inserted successfully!");
                    }
                    else if (response == "0") {
                        $("#MessageID").text("Term Name with Name " + '"' + FeeTermName + '"' + " already exists.");

                    }
                    else if (response == response) {

                        $('#MessageID').text('Record inserted successfully.');
                    }
                    else {
                        // Handle the case when the record insertion fails
                        $("#MessageID").text("Failed to insert the record. Please try again.");
                        // Perform any additional error handling or display error messages
                    }
                },
                error: function (xhr, status, error) {
                    // Handle errors
                }
            });
        }
    }

    /*-------------------------- Create New Fee Type Functions End---------------------------------------------*/















    /*---------------------------------  Edit Fields Geting values To pass parameter Action Method and Append that values In fileds function code start---------------------------------  */

    function FeeType_Edit(FeeTermId) {
        debugger;
        $('#ErrorMessage_SpanId').text('');
        $.ajax({
            url: '/FeeSection/Fee_Terms_EditGet', // Update with the appropriate URL
            method: 'GET',
            data: {
                FeeTermId: FeeTermId
            },
            success: function (response) {
                debugger;


                // Populate the form fields with the received data
                $('#FeeTermIdTxt_Id').val(response.feeTermId);
                $('#InstanceIdTxt_Id').val(response.instanceId);


                var academicYearId = response.academicYearId.toString();
                $('#AcademicYearEdit_Id').val(academicYearId);



                $('#FeeTermNameTxt_Id').val(response.termName);




                $('#FeeTermdescriptionTxt_Id').val(response.description);






                debugger;


                $('#FTermEdit_ID').val('');
                $('#FTermEdit_ID option').filter(function () {
                    return $(this).text() == response.feeType;
                }).prop('selected', true);

                $('#FTermEdit_ID option[value=""]').prop('selected', false);








                // Show the update section
                $("#CreateFeeDiscountType_Divid").hide();
                $("#FeeTypesDiscountTbl_Divid").hide();
                $("#UpdateEditView_DivId").show();
            },
            error: function () {
                console.log('Error fetching Fee Type data.');
            }
        });
    }
    /*---------------------------------  Edit Fields Geting values To pass parameter Action Method and Append that values In fileds function code End---------------------------------  */


    /*---------------------------------  IN EDIT VIEW  BACK TO SEARCH HIDE SOME DIV IDS AND SHOW SOME DIV IDS FUNCTION CODE START ---------------------------------  */

    function EditTobackSearch(event) {

        event.preventDefault();

        Feesection_TbLData_Callingfunction();
        $("#ErrorMessage_SpanId").html('');
        $("#MessageID").html('');
        $("#ErrorMessage_SpanId").html('');

        $("#UpdateMessageID").html('');
        $("#UpdatevalidationMessage").html('');

        $("#CreateFeeDiscountType_Divid").hide();
        $("#FeeTypesDiscountTbl_Divid").show();
        $("#UpdateEditView_DivId").hide();

    }
    /*---------------------------------  IN EDIT VIEW  BACK TO SEARCH HIDE SOME DIV IDS AND SHOW SOME DIV IDS FUNCTION CODE END ---------------------------------  */

    //Fee_Terms_EditUpdate


    /*---------------------------------  Update validateForm code Start---------------------------------  */

    function UpdatevalidateForm() {
        debugger;
        $('#UpdateMessageID').text('');
        $('#ErrorMessage_SpanId').text('');
        var AcademicYearId = $('#AcademicYearEdit_Id').val();
        var FType_ID = $('#FTermEdit_ID').val();


        var TermName = document.getElementById("FeeTermNameTxt_Id").value;
        var Description = document.getElementById("FeeTermdescriptionTxt_Id").value;


        var Update_validationMessage = "";
        var hasError = false;

        if (FType_ID.length === 0 || (FType_ID.length === 1 && FType_ID[0] === "")) {
            Update_validationMessage += "Fee Types is required.<br>";
            hasError = true;
        }


        if (TermName === "") {
            Update_validationMessage += "Term Name is required.<br>";
            hasError = true;
        }
        if (AcademicYearId === "") {
            Update_validationMessage += "Academic Year is required.<br>";
            hasError = true;
        }



        if (hasError) {
            $('#Updatevalidation2').html("Following fields have invalid data :");
            $("#UpdatevalidationMessage").html(Update_validationMessage);
            return false; // Return false to prevent form submission
        } else {
            $("#UpdatevalidationMessage").html("");
            return true; // Return true to proceed with form submission
        }
    }

    /*---------------------------------  Update validateForm code End---------------------------------  */





    /*---------------------------------  Update Field Geting values function code Start---------------------------------  */

    function UpdateFeeTerm(event) {
        event.preventDefault();


        /*------- Update Validation calling this--------------------*/
        if (UpdatevalidateForm()) {


            debugger;

            $('#Updatevalidation2').text('');
            $('#UpdatevalidationMessage').text('');

            $('#UpdateMessageID').text('');
            var FeeTermId = document.getElementById('FeeTermIdTxt_Id').value;

            var InstanceId = document.getElementById('InstanceIdTxt_Id').value;

            var AcademicYearId = document.getElementById("AcademicYearEdit_Id").value;

            var TermName = document.getElementById("FeeTermNameTxt_Id").value;

            //var FeeTypeIds = document.getElementById("FTerm_ID").value;
            var Description = document.getElementById("FeeTermdescriptionTxt_Id").value;


            var selectedValue = $('#FTermEdit_ID').val();

            var UpdateFee_Data = {
                FeeTermId: FeeTermId,
                InstanceId: InstanceId,
                AcademicYearId: AcademicYearId,
                TermName: TermName,
                FeeTypeIds: selectedValue,
                Description: Description
            };

            // Call the Update  ManageFeeTypes function and pass the form data
            Update_FeeTypes(UpdateFee_Data);

        }
    }

    /*---------------------------------  Update Field Geting values function code End---------------------------------  */




    /*---------------------------------  Update Field Geting values tTo pass Action Method function code Start---------------------------------  */

    function Update_FeeTypes(UpdateFee_Data) {
        var TermName = document.getElementById("FeeTermNameTxt_Id").value;
        $.ajax({
            url: '/FeeSection/Fee_Terms_EditUpdate',
            method: 'POST',
            data: UpdateFee_Data,
            success: function (response) {

                debugger;
                console.log(response);
                if (response == "1") {

                    $("#UpdateMessageID").text("Record updated successfully.");

                } else if (response == "2") {
                    $("#UpdateMessageID").text("Record updated successfully.");
                }
                else if (response == "") {

                    $('#UpdateMessageID').text('Record updated successfully.');
                }
                else if (response == "0") {

                    $("#UpdateMessageID").text("Cannot Update FeeType(s) for FeeTerm " + TermName + " ,Few Students are Assocoiated with It.");

                }
            },
            error: function () {
                console.log('Error saving fee type.');
            }
        });
    }

    /*---------------------------------  Update Field Geting values tTo pass Action Method function code End---------------------------------  */


    /*---------------------------------  Update Update_View_Delete Action Method function code start---------------------------------  */


    function Update_View_Delete(event) {
        debugger;

        event.preventDefault();
        $('#ErrorMessage_SpanId').text('');
        $('#UpdateMessageID').text('');

        var FeeTermId = document.getElementById('FeeTermIdTxt_Id').value;

        var InstanceId = document.getElementById('InstanceIdTxt_Id').value;

        var selectedValue = $('#FTermEdit_ID').val();

        var FeeTypeName = $('#FTermEdit_ID option:selected').map(function () {
            return $(this).text();
        }).get()

        var TermNameTXT = document.getElementById("FeeTermNameTxt_Id").value;

        if (confirm('Are you sure you want to delete this Fee Term?\nClick ' + 'OK' + ' to delete or ' + 'Cancel' + ' to stop deleting.')) {

            $.ajax({
                url: '/FeeSection/Delete_FeeTerm',
                method: 'POST',
                data: {
                    InstanceId: InstanceId,
                    FeeTermId: FeeTermId,
                    FeeTypeId: selectedValue
                },
                success: function (response) {
                    debugger;
                    if (response == "1") {
                        $("#CreateFeeDiscountType_Divid").hide();
                        $("#FeeTypesDiscountTbl_Divid").show();
                        $("#UpdateEditView_DivId").hide();

                        debugger;
                        Feesection_TbLData_Callingfunction();

                    }
                    else if (response == "2") {
                        $('#UpdateMessageID').html('FeeType ' + '"' + FeeTypeName + '"' + ' is Deleted For the FeeTerm' + '"' + TermNameTXT + '"');
                    }
                    else {
                        $('#ErrorMessage_SpanId').text('Deletion failed');
                    }
                }
            });
        }

    }

    /*---------------------------------  Update Update_View_Delete Action Method function code End---------------------------------  */


</script>